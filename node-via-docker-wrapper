#!/usr/bin/env bash
## This file is not meant to be executed directly.
## It should be executed via a symlink, named the same as the executable you wish to execute inside the Docker image.

## Documentation at https://github.com/hugojosefson/node-via-docker-wrapper#readme

# Fail on any error
set -e

# Configurable env variables
NODE_VERSION="${NODE_VERSION:-lts}"
DOCKER_IMAGE="${DOCKER_IMAGE:-node:${NODE_VERSION}}"

DOCKER_USER=${DOCKER_USER:-"$(id -u)":"$(id -g)"}
DOCKER_WORKDIR="${DOCKER_WORKDIR:-$(pwd)}"
DOCKER_WORKDIR="$(cd ${DOCKER_WORKDIR} && pwd)"
DOCKER_EXTRA_ARGS="${DOCKER_EXTRA_ARGS:-}"
DOCKER_EXECUTABLE="${DOCKER_EXECUTABLE:-$(basename "${0}")}"

CACHE_BASE="${CACHE_BASE:-${HOME}/.cache/node-via-docker}"

CACHE_DIR_CLEANED_UP="$(echo "${DOCKER_WORKDIR}" | sed -r "s/[^a-z0-9+@=.-]/_/gi")"
CACHE_DIR_HASH="$(echo "${DOCKER_WORKDIR}" | md5sum | cut -d ' ' -f 1)"
CACHE_IDENTIFIER="${CACHE_IDENTIFIER:-${CACHE_DIR_CLEANED_UP}_${CACHE_DIR_HASH}}"

CACHE_DIR="${CACHE_DIR:-${CACHE_BASE}/${CACHE_IDENTIFIER}}"

# Numeric booleans, for legibility
true=0
false=1

# Are we in a TTY?
function isTTY() {
  if [[ -t 1 ]]; then
    return ${true}
  else
    return ${false}
  fi
}

# Write current git user config to ${CACHE_DIR}/home, so it is visible inside the Docker container.
function writeGitUserToConfig() {
  local gitEmail="$(git config user.email)"
  local gitName="$(git config user.name)"

  mkdir -p "${CACHE_DIR}/home"
  touch "${CACHE_DIR}/home/.gitconfig"
  git config --file "${CACHE_DIR}/home/.gitconfig" --unset-all user.email || true
  git config --file "${CACHE_DIR}/home/.gitconfig" --unset-all user.name || true
  git config --file "${CACHE_DIR}/home/.gitconfig" --add user.email "${gitEmail}"
  git config --file "${CACHE_DIR}/home/.gitconfig" --add user.name "${gitName}"
}

# Program starts here
if isTTY; then
  TTY_ARG="--tty"
else
  TTY_ARG=""
fi

writeGitUserToConfig

if [[ ! -z "${PORT}" ]]; then
  PORT_ARGS="--env PORT=${PORT} --publish ${PORT}:${PORT}"
else
  PORT_ARGS=""
fi

docker run \
  --rm \
  --interactive \
  ${TTY_ARG} \
  --user ${DOCKER_USER} \
  --workdir "${DOCKER_WORKDIR}" \
  --volume "${DOCKER_WORKDIR}":"${DOCKER_WORKDIR}" \
  --volume "${CACHE_DIR}/home":"${HOME}" \
  --env HOME="${HOME}" \
  ${PORT_ARGS} \
  ${DOCKER_EXTRA_ARGS} \
  ${DOCKER_IMAGE} \
  ${DOCKER_EXECUTABLE} "$@"
